name: Build

on:
  workflow_call:
  workflow_dispatch:
  push:
    paths:
      - "python/ectec-gui/src/**"
    tags:
      - build**

jobs:
  test:
    uses: ./.github/workflows/py-test-ectec.yaml

  build-python-distribution:
    runs-on: ubuntu-latest
    name: Build python wheel and sdist distribution.
    needs: test
    steps:
      - uses: actions/checkout@24cb9080177205b6e8c946b17badbe402adc938f # v3.4.0
        with:
          submodules: "recursive"
      - uses: actions/setup-python@d27e3f3d7c64b4bbf8e4abfb9b63b83e846e0435 # v4.5.0
        with:
          python-version: ">=3.8"
          cache: "pip"
          cache-dependency-path: |
            **/pyproject.toml
            **/requirements-dev.txt
      - run: |
          python -m pip install -U pip
          pip install -U setuptools wheel
          pip install -r python/ectec-gui/requirements-dev.txt

      - name: Generate breeze resource file
        run: doit rcc:res/breeze.qrc
        working-directory: python/ectec-gui/

      - name: Build python distribution
        run: python -m build -w -s -n
        working-directory: python/ectec-gui/

      - uses: actions/upload-artifact@0b7f8abb1508181956e8e162db84b466c27e18ce # v3.1.2
        with:
          name: python-sdist-wheel
          path: python/ectec-gui/dist/

  build-pyinstaller-bundle:
    name: Create executable bundle with PyInstaller.
    needs: test
    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-latest, macos-latest, windows-latest]
    runs-on: ${{ matrix.os }}

    steps:
      - uses: actions/checkout@24cb9080177205b6e8c946b17badbe402adc938f # v3.4.0
        with:
          submodules: "recursive"
      - uses: actions/setup-python@d27e3f3d7c64b4bbf8e4abfb9b63b83e846e0435 # v4.5.0
        with:
          python-version: ">=3.10"
          cache: "pip"
          cache-dependency-path: |
            **/pyproject.toml
            **/requirements-dev.txt
      - run: |
          python -m pip install -U pip
          pip install -U setuptools wheel
          pip install -r python/ectec-gui/requirements-dev.txt

      - name: Extract ectecgui version
        id: ectecgui-version
        shell: python
        run: |
          import ast
          import sys
          with open('python/ectec-gui/src/ectecgui/__init__.py', 'r') as f:
            content = f.read()
          document = ast.parse(content, 'ectecgui/__init__.py')
          for node in ast.walk(document):
            print(f'::debug::{str(type(node))}')
            if isinstance(node, ast.Assign) and node.targets:
              target = node.targets[0]
              print(f'::debug::{ast.dump(target)}')
              if isinstance(target.ctx, ast.Store) and target.id == 'VERSION':
                # version found
                version = str(node.value.value)
                print(f"VERSION={version}", file=os.environ['GITHUB_OUTPUT'])
                break
          else:
            # no version found
            print('::error file=python/ectec-gui/src/ectecgui/__init__.py,title=Extraction of version failed::No assigment to the variable VERSION was found.')
            sys.exit(1)

      - name: Generate breeze resource file
        run: doit rcc:res/breeze.qrc
        working-directory: python/ectec-gui/

      - name: Bundle with PyInstaller.
        run: |
          pip install .
          python -m PyInstaller pyinstall.spec
        working-directory: python/ectec-gui/

      - name: Determine archive file name
        shell: python
        id: archive
        run: |
          if '${{ runner.os }}' == 'Linux':
            extension = '.tar.gz'
          else:
            extension = '.zip'
          filename = 'python/ectec-gui/dist/Ectec-${{ steps.ectecgui-version.outputs.VERSION }}-${{ runner.os }}' + extension
          print(f"FILE={outfilenameput}", file=os.environ['GITHUB_OUTPUT'])

      - name: Archive PyInstaller bundle
        uses: ihiroky/archive-action@e8b4644f992de8f7423e0bd7292c2e047ecf26ce # v1
        with:
          root_dir: python/ectec-gui/dist/Ectec/
          file_path: ${{ steps.archive.outputs.FILE }}

      - name: Gather artifacts
        shell: bash
        run: |
          mkdir upload
          mv ${{ steps.archive.outputs.FILE }} upload/

      - name: Archive PyInstaller MacOS app bundle
        run: |
          zip -r ${{ github.workspace }}/upload/MacOS-AppBundles.zip *.app
        working-directory: python/ectec-gui/dist/
        if: ${{ matrix.os == 'macos-latest' }}

      - uses: actions/upload-artifact@0b7f8abb1508181956e8e162db84b466c27e18ce # v3.1.2
        with:
          name: pyinstaller-${{ matrix.os }}
          path: |
            upload/*
